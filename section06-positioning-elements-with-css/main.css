#product-overview {
  position: relative;
  background: url("freedom.jpg");
  width: 100%;
  height: 528px;
  padding: 10px;
  margin-top: 43px;
}

.section-title {
  color: #2ddf5c;
  text-align: center;
}

#product-overview h1 {
  position: absolute;
  bottom: 4%;
  left: 4%;
  color: white;
  font-family: "Anton", sans-serif;
}

.plan__list {
  width: 80%;
  margin: auto;
  text-align: center;
}

.plan {
  background: #d5ffdc;
  text-align: center;
  padding: 16px;
  margin: 8px;
  display: inline-block;
  width: 30%;
  vertical-align: middle;
}

.plan--highlighted {
  background: #19b84c;
  color: white;
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.5);
}

.plan__annotation {
  background: white;
  color: #19b84c;
  padding: 8px;
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.5);
  border-radius: 8px;
}

.plan__title {
  color: #0e4f1f;
}

.plan__price {
  color: #858585;
}

.plan--highlighted .plan__title {
  color: white;
}

.plan--highlighted .plan__price {
  color: #0e4f1f;
}

.plan__features {
  list-style: none;
  margin: 0;
  padding: 0;
}

.plan__feature {
  margin: 8px 0;
}

#key-features {
  background: #ff1b68;
  margin-top: 80px;
  padding: 16px;
}

#key-features .section-title {
  color: white;
  margin: 32px;
}

.key-feature__list {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: center;
}

.key-feature {
  display: inline-block;
  width: 30%;
  vertical-align: top;
}

.key-feature__image {
  background: #ffcede;
  width: 128px;
  height: 128px;
  border: 2px solid #424242;
  border-radius: 50%;
  margin: auto;
}

.key-feature__description {
  text-align: center;
  font-weight: bold;
  color: white;
  font-size: 20px;
}

/* h1 {
    font-family: sans-serif;
} */

/*
Position property:

fixed:  is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.

absolute:  is positioned relative to the nearest positioned ancestor . However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling. Note: Absolute positioned elements are removed from the normal flow, and can overlap elements.

relative: is positioned relative to its normal position.Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.

*/

/*
Z-index property:

The z-index property specifies the stack order of an element (which element should be placed in front of, or behind, the others).

An element can have a positive or negative stack order.

Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display: flex elements).

*/
